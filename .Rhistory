library(tidyverse)
library(palmerpenguins)
install.packages("palmerpenguins")
library(palmerpenguins)
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
penguin = penguin
glimpse(penguins)
?penguins
penguins |>
ggplot(mapping = aes(x = bill_length_mm,
y = bill_depth_mm,
col = species)) +
geom_point() +
geom_smooth(se = FALSE,
method = "lm") +
theme_classic() +
labs(x = "Bill Length (mm)", y = "Bill Depth (mm)")
penguins |>
ggplot(mapping = aes(x = species,
y = bill_depth_mm)) +
geom_point() +
theme_bw() +
labs(x = "Species", y = "Bill Depth (mm)")
q()
setwd("D:/3rdSUMMER/ML/Practice_Exercise_2.5")
getwd()
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating the location of the CSV files
path <-file.path(getwd(), directory)
## 'pollutant' is a character vector of length 1 indicating the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
allrows<-NA
for (i in id){
filename <-paste(directory,"/",formatC(i, width=3, flag="0"),".csv",sep="")
x <- read.csv(filename)
allrows <-rbind(allrows,x)
}
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
avg = if (pollutant=="sulfate")
mean(allrows$sulfate, na.rm=TRUE)
else if(pollutant=="nitrate")
mean(allrows$nitrate, na.rm=TRUE)
avg
}
pollutantmean <- function(directory, pollutant, id = 1:332)
path <-file.path(getwd(), directory)
setwd("D:/3rdSUMMER/ML/Practice_Exercise_2.5")
setwd("D:/3rdSUMMER/ML/Practice_Exercise_2.5")
source("D:/3rdSUMMER/ML/Practice_Exercise_2.5/pollutantmean.R")
pollutantmean <- function(directory, pollutant, id = 1:332) {
# Construct the path to the directory containing the CSV files
path <- file.path(getwd(), directory)
# Initialize an empty data frame to store all rows from the selected monitors
allrows <- data.frame()
# Loop through each monitor ID and read its data
for (i in id) {
filename <- paste(path, "/", formatC(i, width=3, flag="0"), ".csv", sep="")
x <- read.csv(filename)
# Append the current monitor's data to the allrows data frame
allrows <- rbind(allrows, x)
}
# Calculate the mean of the specified pollutant, ignoring NA values
avg <- if (pollutant == "sulfate") {
mean(allrows$sulfate, na.rm = TRUE)
} else if (pollutant == "nitrate") {
mean(allrows$nitrate, na.rm = TRUE)
}
return(avg)
}
return(avg)
pollutantmean <- function(directory, pollutant, id = 1:332)
path <- file.path(getwd(), directory)
allrows <- data.frame()
View(pollutantmean)
View(allrows)
View(pollutantmean)
View(pollutantmean)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
setwd("D:/3rdSUMMER/ML/Practice_Exercise_2.5")
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
path <-file.path(getwd(), directory)
result <- data.frame(id=numeric(0), nobs=numeric(0))
for (i in id){
filename <-paste(directory,"/",formatC(i, width=3, flag="0"),".csv",sep="")
x <- read.csv(filename)
good <- complete.cases(x)
r <- nrow(x[good,])
rows <- c(i,r)
result <-rbind(result, rows)
}
colnames(result)<-c("id","nobs")
result
}
source("complete.R")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
ls()
result <- data.frame(id=numeric(0), nobs=numeric(0))
dataFrames <- Filter(function(x) class(x) == "data.frame", ls())
print(dataFrames)
save.image("D:/3rdSUMMER/ML/Practice_Exercise_2.5/data.RData")
